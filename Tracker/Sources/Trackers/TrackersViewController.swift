//
//  TrackersViewController.swift
//  Tracker
//
//  Created by –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –î—É–¥—á–µ–Ω–∫–æ on 23.02.2025.
//

import UIKit

// –û—Å–Ω–æ–≤–Ω–æ–π —ç–∫—Ä–∞–Ω, –≥–¥–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–∫–µ—Ä–æ–≤ (–∫–∞–∂–¥—ã–π –≤ —Å–≤–æ–µ–π —è—á–µ–π–∫–µ)
final class TrackersViewController: UIViewController {

    // MARK: - UI Elements

    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —ç–∫—Ä–∞–Ω–∞ "–¢—Ä–µ–∫–µ—Ä—ã"
    private let titleLabel: UILabel = {
        let label = UILabel()
        // –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ false, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–ª–µ–π–∞—É—Ç
        label.translatesAutoresizingMaskIntoConstraints = false
        label.text = "–¢—Ä–µ–∫–µ—Ä—ã"
        // –ö—Ä—É–ø–Ω—ã–π –∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç (34, bold)
        label.font = UIFont.systemFont(ofSize: 34, weight: .bold)
        label.textColor = .black
        label.textAlignment = .left
        return label
    }()
    
    // –ö–Ω–æ–ø–∫–∞ "+" –≤–≤–µ—Ä—Ö—É, –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —ç–∫—Ä–∞–Ω —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–µ–∫–µ—Ä–∞
    private let plusButton: UIButton = {
        let button = UIButton(type: .system)
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–∫–æ–Ω–∫—É "plus"
        button.setImage(UIImage(systemName: "plus"), for: .normal)
        // –î–µ–ª–∞–µ–º –∏–∫–æ–Ω–∫—É —á—ë—Ä–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞
        button.tintColor = .black
        button.translatesAutoresizingMaskIntoConstraints = false
        return button
    }()
    
    // –ö–Ω–æ–ø–∫–∞ "–î–∞—Ç–∞" –≤–≤–µ—Ä—Ö—É, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
    private let dateButton: UIButton = {
        let button = UIButton(type: .system)
        button.setTitle("–î–∞—Ç–∞", for: .normal)
        button.setTitleColor(.black, for: .normal)
        // –®—Ä–∏—Ñ—Ç 17, regular
        button.titleLabel?.font = UIFont.systemFont(ofSize: 17, weight: .regular)
        // –°–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π —Ñ–æ–Ω
        button.backgroundColor = .systemGray5
        // –°–∫—Ä—É–≥–ª—è–µ–º —É–≥–ª—ã
        button.layer.cornerRadius = 8
        button.translatesAutoresizingMaskIntoConstraints = false
        return button
    }()
    
    // –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ (UISearchBar)
    private let searchBar: UISearchBar = {
        let searchBar = UISearchBar()
        // –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä "–ü–æ–∏—Å–∫"
        searchBar.placeholder = "–ü–æ–∏—Å–∫"
        // –°—Ç–∏–ª—å –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π
        searchBar.searchBarStyle = .minimal
        // –£–±–∏—Ä–∞–µ–º —Ñ–æ–Ω
        searchBar.backgroundImage = UIImage()
        searchBar.translatesAutoresizingMaskIntoConstraints = false
        return searchBar
    }()
    
    // CollectionView, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è —Å–µ–∫—Ü–∏–∏ –∏ —è—á–µ–π–∫–∏ —Ç—Ä–µ–∫–µ—Ä–æ–≤
    private let collectionView: UICollectionView = {
        // –°–æ–∑–¥–∞–µ–º FlowLayout (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª)
        let layout = UICollectionViewFlowLayout()
        layout.scrollDirection = .vertical
        layout.minimumLineSpacing = 16  // –æ—Ç—Å—Ç—É–ø –º–µ–∂–¥—É —è—á–µ–π–∫–∞–º–∏ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
        // –†–∞–∑–º–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–π —Å–µ–∫—Ü–∏–∏ (TrackerHeaderView)
        layout.headerReferenceSize = CGSize(width: UIScreen.main.bounds.width, height: 32)
        
        // –°–æ–∑–¥–∞–µ–º UICollectionView —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º layout
        let collectionView = UICollectionView(frame: .zero, collectionViewLayout: layout)
        collectionView.backgroundColor = .white
        // –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–ª–µ–π–∞—É—Ç
        collectionView.translatesAutoresizingMaskIntoConstraints = false
        return collectionView
    }()
    
    // MARK: - Mock Data
    
    // –ü—Ä–∏–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (section) –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (items)
    // –ö–∞–∂–¥–∞—è —Å–µ–∫—Ü–∏—è –∏–º–µ–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ (category) –∏ –º–∞—Å—Å–∏–≤ Tracker
    private let trackers: [(category: String, items: [Tracker])] = [
        (
            "–î–æ–º–∞—à–Ω–∏–π —É—é—Ç",
            [
                Tracker(id: UUID(), name: "–ü–æ–ª–∏–≤–∞—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏—è", emoji: "‚ù§Ô∏è", color: .systemGreen, schedule: [1, 3, 5])
            ]
        ),
        (
            "–†–∞–¥–æ—Å—Ç–Ω—ã–µ –º–µ–ª–æ—á–∏",
            [
                Tracker(id: UUID(), name: "–ö–æ—à–∫–∞ –∑–∞—Å–ª–æ–Ω–∏–ª–∞ –∫–∞–º–µ—Ä—É –Ω–∞ —Å–æ–∑–≤–æ–Ω–µ", emoji: "üòª", color: .systemOrange, schedule: [2, 4]),
                Tracker(id: UUID(), name: "–ë–∞–±—É—à–∫–∞ –ø—Ä–∏—Å–ª–∞–ª–∞ –æ—Ç–∫—Ä—ã—Ç–∫—É –≤ WhatsApp", emoji: "üå∫", color: .systemRed, schedule: [1, 6])
            ]
        )
    ]
    
    // MARK: - Lifecycle
    
    // –ú–µ—Ç–æ–¥ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // –ë–µ–ª—ã–π —Ñ–æ–Ω
        view.backgroundColor = .white
        // –°–∫—Ä—ã–≤–∞–µ–º –Ω–∞–≤–±–∞—Ä
        navigationController?.setNavigationBarHidden(true, animated: false)
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º UI –∏ CollectionView
        setupUI()
        setupCollectionView()
    }
    
    // MARK: - UI Setup
    
    // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —ç–∫—Ä–∞–Ω –∏ –∑–∞–¥–∞–µ–º –∏–º –∫–æ–Ω—Å—Ç—Ä–µ–π–Ω—Ç—ã
    private func setupUI() {
        // –î–æ–±–∞–≤–ª—è–µ–º titleLabel, plusButton, dateButton, searchBar, collectionView
        view.addSubview(titleLabel)
        view.addSubview(plusButton)
        view.addSubview(dateButton)
        view.addSubview(searchBar)
        view.addSubview(collectionView)
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞—Ä–≥–µ—Ç—ã –Ω–∞ –∫–Ω–æ–ø–∫–∏
        plusButton.addTarget(self, action: #selector(addTrackerTapped), for: .touchUpInside)
        dateButton.addTarget(self, action: #selector(dateButtonTapped), for: .touchUpInside)
        
        // –°—Ç–∞–≤–∏–º –Ω–∞ –∫–Ω–æ–ø–∫–µ "–î–∞—Ç–∞" —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É (–ø—Ä–∏–º–µ—Ä)
        dateButton.setTitle(currentDateString(), for: .normal)
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Å—Ç—Ä–µ–π–Ω—Ç—ã
        setupConstraints()
    }
    
    // –†–∞—Å—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–Ω—Å—Ç—Ä–µ–π–Ω—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–∞–±–≤—å—é
    private func setupConstraints() {
        // safeArea - –≤–µ—Ä—Ö/–Ω–∏–∑ —ç–∫—Ä–∞–Ω–∞ —Å —É—á—ë—Ç–æ–º –≤—ã—Ä–µ–∑–∞ –∏ —Ç.–ø.
        let safeArea = view.safeAreaLayoutGuide
        
        NSLayoutConstraint.activate([
            // plusButton: 16pt –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É –∏ —Å–ª–µ–≤–∞
            plusButton.topAnchor.constraint(equalTo: safeArea.topAnchor, constant: 16),
            plusButton.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 16),
            plusButton.widthAnchor.constraint(equalToConstant: 42),
            plusButton.heightAnchor.constraint(equalToConstant: 42),
            
            // titleLabel —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –ø–æ–¥ –ø–ª—é—Å-–∫–Ω–æ–ø–∫–æ–π (–æ—Ç—Å—Ç—É–ø 1pt),
            // —Å–ª–µ–≤–∞ 16pt
            titleLabel.topAnchor.constraint(equalTo: plusButton.bottomAnchor, constant: 1),
            titleLabel.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 16),
            // –£—Å—Ç—É–ø–∞–µ–º –Ω–µ–º–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π –¥–∞—Ç—ã
            titleLabel.trailingAnchor.constraint(lessThanOrEqualTo: dateButton.leadingAnchor, constant: -8),
            
            // dateButton —Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ plusButton
            dateButton.centerYAnchor.constraint(equalTo: plusButton.centerYAnchor),
            // –ø—Ä–∏–∂–∞—Ç –∫ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é —ç–∫—Ä–∞–Ω–∞ (–æ—Ç—Å—Ç—É–ø 16pt)
            dateButton.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -16),
            // —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞/–≤—ã—Å–æ—Ç–∞
            dateButton.widthAnchor.constraint(equalToConstant: 77),
            dateButton.heightAnchor.constraint(equalToConstant: 34),
            
            // searchBar –ø–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º (–æ—Ç—Å—Ç—É–ø 8pt),
            // —Å–ª–µ–≤–∞/—Å–ø—Ä–∞–≤–∞ 16pt
            searchBar.topAnchor.constraint(equalTo: titleLabel.bottomAnchor, constant: 8),
            searchBar.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 16),
            searchBar.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -16),
            searchBar.heightAnchor.constraint(equalToConstant: 36),
            
            // collectionView –ø–æ–¥ searchBar (16pt –æ—Ç—Å—Ç—É–ø),
            // –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É —ç–∫—Ä–∞–Ω–∞, –¥–æ —Å–∞–º–æ–≥–æ –Ω–∏–∑–∞
            collectionView.topAnchor.constraint(equalTo: searchBar.bottomAnchor, constant: 16),
            collectionView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            collectionView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            collectionView.bottomAnchor.constraint(equalTo: view.bottomAnchor)
        ])
    }
    
    // MARK: - Collection View Setup
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —è—á–µ–π–∫—É –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫, –Ω–∞–∑–Ω–∞—á–∞–µ–º dataSource, delegate
    private func setupCollectionView() {
        collectionView.dataSource = self
        collectionView.delegate = self
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç—Å—Ç—É–ø–æ–≤ –∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π –º–µ–∂–¥—É —è—á–µ–π–∫–∞–º–∏
           if let layout = collectionView.collectionViewLayout as? UICollectionViewFlowLayout {
               layout.sectionInset = UIEdgeInsets(top: 16, left: 16, bottom: 16, right: 16) // –û—Ç—Å—Ç—É–ø—ã –ø–æ –∫—Ä–∞—è–º
               layout.minimumInteritemSpacing = 16  // –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≤ —Ä—è–¥—É
               layout.minimumLineSpacing = 16       // –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É —Ä—è–¥–∞–º–∏
           }

        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–ª–∞—Å—Å TrackerCell —Å reuseIdentifier
        collectionView.register(
            TrackerCell.self,
            forCellWithReuseIdentifier: TrackerCell.identifier
        )
        
        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ (TrackerHeaderView) –¥–ª—è —Å–µ–∫—Ü–∏–π
        collectionView.register(
            TrackerHeaderView.self,
            forSupplementaryViewOfKind: UICollectionView.elementKindSectionHeader,
            withReuseIdentifier: TrackerHeaderView.identifier
        )
    }
    
    // MARK: - Actions
    
    // –ú–µ—Ç–æ–¥, –≤—ã–∑—ã–≤–∞–µ–º—ã–π –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ "+"
    @objc private func addTrackerTapped() {
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–µ–∫–µ—Ä–∞ (–ø—Ä–∏–º–µ—Ä)
        let createTrackerVC = CreateTrackerViewController()
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –µ–≥–æ –≤ —Å—Ç–∏–ª–µ PageSheet
        createTrackerVC.modalPresentationStyle = .pageSheet
        present(createTrackerVC, animated: true)
        print("–ö–Ω–æ–ø–∫–∞ ¬´+¬ª –Ω–∞–∂–∞—Ç–∞")
    }
    
    // –ú–µ—Ç–æ–¥, –≤—ã–∑—ã–≤–∞–µ–º—ã–π –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ "–î–∞—Ç–∞"
    @objc private func dateButtonTapped() {
        print("–ö–Ω–æ–ø–∫–∞ –¥–∞—Ç—ã –Ω–∞–∂–∞—Ç–∞")
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É —Å—Ç—Ä–æ–∫–æ–π (—Ñ–æ—Ä–º–∞—Ç "dd.MM.yy")
    private func currentDateString() -> String {
        let formatter = DateFormatter()
        formatter.dateFormat = "dd.MM.yy"
        return formatter.string(from: Date())
    }
}

// MARK: - UICollectionViewDataSource

extension TrackersViewController: UICollectionViewDataSource {

    // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—Ü–∏–π (–∫–∞—Ç–µ–≥–æ—Ä–∏–π)
    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return trackers.count
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å–µ–∫—Ü–∏–∏
    func collectionView(_ collectionView: UICollectionView,
                        numberOfItemsInSection section: Int) -> Int {
        return trackers[section].items.count
    }
    
    // –°–æ–∑–¥–∞—ë–º/–∑–∞–ø–æ–ª–Ω—è–µ–º —è—á–µ–π–∫—É –¥–ª—è indexPath
    func collectionView(_ collectionView: UICollectionView,
                        cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        // –î–æ—Å—Ç–∞—ë–º —è—á–µ–π–∫—É –ø–æ –Ω–∞—à–µ–º—É –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É
        guard let cell = collectionView.dequeueReusableCell(
            withReuseIdentifier: TrackerCell.identifier,
            for: indexPath
        ) as? TrackerCell else {
            // –ï—Å–ª–∏ –ø–æ—á–µ–º—É-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é –¥–µ—Ñ–æ–ª—Ç–Ω—É—é
            return UICollectionViewCell()
        }
        
        // –ë–µ—Ä—ë–º —Ç—Ä–µ–∫–µ—Ä –∏–∑ –º–∞—Å—Å–∏–≤–∞
        let tracker = trackers[indexPath.section].items[indexPath.item]
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —è—á–µ–π–∫—É: isCompleted = false, count = 0 (–≤—Ä–µ–º–µ–Ω–Ω–æ)
        cell.configure(with: tracker, isCompleted: false, count: 0)
        
        return cell
    }
    
    // –°–æ–∑–¥–∞—ë–º/–∑–∞–ø–æ–ª–Ω—è–µ–º header (TrackerHeaderView) –¥–ª—è —Å–µ–∫—Ü–∏–∏
    func collectionView(_ collectionView: UICollectionView,
                        viewForSupplementaryElementOfKind kind: String,
                        at indexPath: IndexPath) -> UICollectionReusableView {
        
        guard let header = collectionView.dequeueReusableSupplementaryView(
            ofKind: kind,
            withReuseIdentifier: TrackerHeaderView.identifier,
            for: indexPath
        ) as? TrackerHeaderView else {
            return UICollectionReusableView()
        }

        let categoryTitle = trackers[indexPath.section].category

        // –£–ø—Ä–∞–≤–ª—è–π –æ—Ç—Å—Ç—É–ø–∞–º–∏ –≤—Ä—É—á–Ω—É—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        if categoryTitle == "–î–æ–º–∞—à–Ω–∏–π —É—é—Ç" {
            header.configure(title: categoryTitle, leadingInset: 28, trailingInset: 198)
        } else if categoryTitle == "–†–∞–¥–æ—Å—Ç–Ω—ã–µ –º–µ–ª–æ—á–∏" {
            header.configure(title: categoryTitle, leadingInset: 28, trailingInset: 159)
        } else {
            header.configure(title: categoryTitle, leadingInset: 28, trailingInset: 198)
        }

        return header
    }
}

// MARK: - UICollectionViewDelegateFlowLayout

extension TrackersViewController: UICollectionViewDelegateFlowLayout {
    // –£–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —è—á–µ–π–∫–∏ (167√ó148) ‚Äî —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –¥–∏–∑–∞–π–Ω—É
    func collectionView(_ collectionView: UICollectionView,
                        layout collectionViewLayout: UICollectionViewLayout,
                        sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: 167, height: 148)
    }
}
