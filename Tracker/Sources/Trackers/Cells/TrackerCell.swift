//
//  TrackerCell.swift
//  Tracker
//
//  Created by –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –î—É–¥—á–µ–Ω–∫–æ on 02.03.2025.
//

import UIKit

// –ö–ª–∞—Å—Å –∫–∞—Å—Ç–æ–º–Ω–æ–π —è—á–µ–π–∫–∏ –¥–ª—è CollectionView
final class TrackerCell: UICollectionViewCell {

    // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —è—á–µ–π–∫–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏/–¥Dequeuing)
    static let identifier = "TrackerCell"

    // MARK: - –í—å—é —Å —Ü–≤–µ—Ç–Ω—ã–º —Ñ–æ–Ω–æ–º (90 pt)

    // –°–æ–∑–¥–∞—ë–º UIView, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏–≥—Ä–∞—Ç—å —Ä–æ–ª—å —Ü–≤–µ—Ç–Ω–æ–≥–æ –±–ª–æ–∫–∞.
    // CornerRadius = 16, —á—Ç–æ–±—ã –±–ª–æ–∫ –∏–º–µ–ª —Å–∫—Ä—É–≥–ª—ë–Ω–Ω—ã–µ —É–≥–ª—ã.
    // –ü–µ—Ä–µ–≤–æ–¥–∏–º AutoResizingMask –≤ false, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–≤—Ç–æ–ª–µ–π–∞—É—Ç.
    private let eventBackgroundView: UIView = {
        let view = UIView()
        view.layer.cornerRadius = 16
        view.layer.masksToBounds = true
        view.translatesAutoresizingMaskIntoConstraints = false
        return view
    }()

    // MARK: - –≠–º–æ–¥–∑–∏

    // UILabel –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ–¥–∑–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "‚ù§Ô∏è" –∏–ª–∏ "üê±").
    // font = 16 pt, –∞–≤—Ç–æ–ª–µ–π–∞—É—Ç –≤–∫–ª—é—á—ë–Ω (translatesAutoresizingMaskIntoConstraints = false).
    private let emojiLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont.systemFont(ofSize: 16, weight: .medium) // –†–∞–∑–º–µ—Ä 16pt, Medium
        label.textAlignment = .center
        label.backgroundColor = UIColor(white: 1.0, alpha: 0.3) // –ë–µ–ª—ã–π —Ü–≤–µ—Ç —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é 30%
        label.layer.cornerRadius = 12 // –†–∞–¥–∏—É—Å 12, —Ç–∞–∫ –∫–∞–∫ —Ñ–æ–Ω 24x24
        label.layer.masksToBounds = true
        label.clipsToBounds = true
        label.translatesAutoresizingMaskIntoConstraints = false
        return label
    }()

    // MARK: - –ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–µ—Ä–∞

    // UILabel –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ç—Ä–µ–∫–µ—Ä–∞. Font size 12, medium, —Ü–≤–µ—Ç –±–µ–ª—ã–π.
    // –ù–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫, –µ—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª–∏–Ω–Ω–æ–µ.
    private let titleLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont.systemFont(ofSize: 12, weight: .medium)
        label.textColor = .white
        label.numberOfLines = 2
        label.translatesAutoresizingMaskIntoConstraints = false
        return label
    }()

    // MARK: - –°—á—ë—Ç—á–∏–∫ –¥–Ω–µ–π

    // –≠—Ç–æ UILabel, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∂–µ—Ç, —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, "5 –¥–Ω–µ–π"),
    // —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –Ω–∏–∂–µ —Ü–≤–µ—Ç–Ω–æ–≥–æ –±–ª–æ–∫–∞, —Å–ª–µ–≤–∞.
    private let counterLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont.systemFont(ofSize: 12, weight: .medium)
        label.textColor = .black
        label.translatesAutoresizingMaskIntoConstraints = false
        return label
    }()

    // MARK: - –ö–Ω–æ–ø–∫–∞ ¬´+¬ª

    // –ö–Ω–æ–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–Ω–∏–∑—É —Å–ø—Ä–∞–≤–∞ (–Ω–∏–∂–µ –±–ª–æ–∫–∞).
    // setTitle("") —É–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—Å—Ç, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—Ç—å –∏–∫–æ–Ω–∫—É.
    // tintColor = .white, —á—Ç–æ–±—ã —Ü–≤–µ—Ç –∏–∫–æ–Ω–∫–∏ –±—ã–ª –±–µ–ª—ã–º.
    // cornerRadius 17, –∑–Ω–∞—á–∏—Ç —Å–∞–º–∞ –∫–Ω–æ–ø–∫–∞ –±—É–¥–µ—Ç –∫—Ä—É–≥–ª–æ–π (34√ó34).
    // translatesAutoresizingMaskIntoConstraints = false –¥–ª—è –∞–≤—Ç–æ–ª–µ–π–∞—É—Ç–∞.
    private let completeButton: UIButton = {
        let button = UIButton(type: .system)
        button.setTitle("", for: .normal)
        button.tintColor = .white
        button.layer.cornerRadius = 17
        button.translatesAutoresizingMaskIntoConstraints = false
        return button
    }()

    // MARK: - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è

    // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è UICollectionViewCell (—á–µ—Ä–µ–∑ —Ñ—Ä–µ–π–º).
    override init(frame: CGRect) {
        super.init(frame: frame)
        setupUI() // –≤—ã–Ω–æ—Å–∏–º –≤—Å—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é UI –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
    }

    // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ NSCoder
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    // MARK: - –í–µ—Ä—Å—Ç–∫–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤

    // –í —ç—Ç–æ–º –º–µ—Ç–æ–¥–µ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è subviews –∏ –∫–æ–Ω—Å—Ç—Ä–µ–π—Ç—ã:
    // –¥–æ–±–∞–≤–ª—è–µ–º eventBackgroundView, –≤ –Ω–µ–≥–æ - emojiLabel –∏ titleLabel.
    // –ó–∞—Ç–µ–º –¥–æ–±–∞–≤–ª—è–µ–º counterLabel –∏ completeButton –ø–æ–¥ –±–ª–æ–∫–æ–º.
    private func setupUI() {
        // –î–æ–±–∞–≤–ª—è–µ–º "—Ü–≤–µ—Ç–Ω–æ–π –±–ª–æ–∫" –≤ contentView —è—á–µ–π–∫–∏
        contentView.addSubview(eventBackgroundView)

        // –í–Ω—É—Ç—Ä—å —Ü–≤–µ—Ç–Ω–æ–≥–æ –±–ª–æ–∫–∞ –¥–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∏ —Ç–µ–∫—Å—Ç
        eventBackgroundView.addSubview(emojiLabel)
        eventBackgroundView.addSubview(titleLabel)

        // –ü–æ–¥ —Ü–≤–µ—Ç–Ω—ã–º –±–ª–æ–∫–æ–º –¥–æ–±–∞–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∏ –∫–Ω–æ–ø–∫—É
        contentView.addSubview(counterLabel)
        contentView.addSubview(completeButton)

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º NSLayoutConstraints
        NSLayoutConstraint.activate([
            // –¶–≤–µ—Ç–Ω–æ–π –±–ª–æ–∫ –ø–æ —à–∏—Ä–∏–Ω–µ –≤—Å–µ–π —è—á–µ–π–∫–∏, –≤—ã—Å–æ—Ç–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è (90pt)
            eventBackgroundView.topAnchor.constraint(equalTo: contentView.topAnchor),
            eventBackgroundView.leadingAnchor.constraint(equalTo: contentView.leadingAnchor),
            eventBackgroundView.trailingAnchor.constraint(equalTo: contentView.trailingAnchor),
            eventBackgroundView.heightAnchor.constraint(equalToConstant: 90),

            // –≠–º–æ–¥–∑–∏ (–æ—Ç—Å—Ç—É–ø 8pt —Å–≤–µ—Ä—Ö—É –∏ —Å–ª–µ–≤–∞ –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞)
            emojiLabel.widthAnchor.constraint(equalToConstant: 24), // –§–æ–Ω 24x24
                emojiLabel.heightAnchor.constraint(equalToConstant: 24),
                emojiLabel.topAnchor.constraint(equalTo: eventBackgroundView.topAnchor, constant: 12),
                emojiLabel.leadingAnchor.constraint(equalTo: eventBackgroundView.leadingAnchor, constant: 12),
            // –ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–µ—Ä–∞ –≤–Ω–∏–∑—É –±–ª–æ–∫–∞ (–æ—Ç—Å—Ç—É–ø—ã –ø–æ –±–æ–∫–∞–º 8 –∏ —Å–Ω–∏–∑—É 8)
            titleLabel.leadingAnchor.constraint(equalTo: eventBackgroundView.leadingAnchor, constant: 8),
            titleLabel.trailingAnchor.constraint(equalTo: eventBackgroundView.trailingAnchor, constant: -8),
            titleLabel.bottomAnchor.constraint(equalTo: eventBackgroundView.bottomAnchor, constant: -8),

            // –°—á–µ—Ç—á–∏–∫ –¥–Ω–µ–π (–Ω–∏–∂–µ –±–ª–æ–∫–∞), 8pt –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É
            counterLabel.topAnchor.constraint(equalTo: eventBackgroundView.bottomAnchor, constant: 8),
            // –∏ –ø—Ä–∏–∂–∞—Ç –∫ –ª–µ–≤–æ–º—É –∫—Ä–∞—é —è—á–µ–π–∫–∏ —Å –æ—Ç—Å—Ç—É–ø–æ–º 8
            counterLabel.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 8),

            // –ö–Ω–æ–ø–∫–∞ —Ç–æ–∂–µ –Ω–∞ 8pt –Ω–∏–∂–µ –±–ª–æ–∫–∞, –Ω–æ –ø—Ä–∏–∂–∞—Ç–∞ –∫ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é
            completeButton.topAnchor.constraint(equalTo: eventBackgroundView.bottomAnchor, constant: 8),
            completeButton.trailingAnchor.constraint(equalTo: contentView.trailingAnchor, constant: -8),
            // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏ 34√ó34
            completeButton.widthAnchor.constraint(equalToConstant: 34),
            completeButton.heightAnchor.constraint(equalToConstant: 34),

            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è, —á—Ç–æ–±—ã –Ω–∏–∂–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –≤—ã–ª–µ–∑–∞–ª–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É —è—á–µ–π–∫–∏
            completeButton.bottomAnchor.constraint(lessThanOrEqualTo: contentView.bottomAnchor, constant: -8),
            counterLabel.bottomAnchor.constraint(lessThanOrEqualTo: contentView.bottomAnchor, constant: -8)
        ])
    }

    // MARK: - –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏

    // –ú–µ—Ç–æ–¥ configure –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —è—á–µ–π–∫–∏
    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    // - tracker: –º–æ–¥–µ–ª—å —Ç—Ä–µ–∫–µ—Ä–∞ (–∏–º—è, —ç–º–æ–¥–∑–∏, —Ü–≤–µ—Ç –∏ —Ç.–¥.)
    // - isCompleted: —Ñ–ª–∞–≥, –≤—ã–ø–æ–ª–Ω–µ–Ω –ª–∏ —Ç—Ä–µ–∫–µ—Ä
    // - count: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π
    func configure(with tracker: Tracker, isCompleted: Bool, count: Int) {
        // –¶–≤–µ—Ç –±–ª–æ–∫–∞ –±–µ—Ä–µ–º –∏–∑ –º–æ–¥–µ–ª–∏
        eventBackgroundView.backgroundColor = tracker.color

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —ç–º–æ–¥–∑–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ
        emojiLabel.text = tracker.emoji
        titleLabel.text = tracker.name

        // –°—á—ë—Ç—á–∏–∫ –¥–Ω–µ–π. –ù–∞–ø—Ä–∏–º–µ—Ä, "0 –¥–Ω–µ–π" –∏–ª–∏ "1 –¥–µ–Ω—å" –∏–ª–∏ "5 –¥–Ω—è" (—É–ø—Ä–æ—â—ë–Ω–Ω–æ)
        let dayString = (count == 1) ? "–¥–µ–Ω—å" : "–¥–Ω—è"
        counterLabel.text = "\(count) \(dayString)"

        // –ï—Å–ª–∏ —Ç—Ä–µ–∫–µ—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º "checkmark", –∏–Ω–∞—á–µ "plus"
        let symbolName = isCompleted ? "checkmark" : "plus"
        let icon = UIImage(systemName: symbolName)
        completeButton.setImage(icon, for: .normal)

        // –§–æ–Ω –∫–Ω–æ–ø–∫–∏ –¥–µ–ª–∞–µ–º —Ç–∞–∫–∏–º –∂–µ, –∫–∞–∫ —É –±–ª–æ–∫–∞
        completeButton.backgroundColor = tracker.color
    }
}
